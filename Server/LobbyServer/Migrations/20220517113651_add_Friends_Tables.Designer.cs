// <auto-generated />
using LobbyServer.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LobbyServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220517113651_add_Friends_Tables")]
    partial class add_Friends_Tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LobbyServer.DB.AccountDb", b =>
                {
                    b.Property<int>("AccountDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AccountDbId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("LobbyServer.DB.FriendRelationDb", b =>
                {
                    b.Property<int>("FriendRelationDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FriendDbId")
                        .HasColumnType("int");

                    b.Property<int>("MeDbId")
                        .HasColumnType("int");

                    b.HasKey("FriendRelationDbId");

                    b.HasIndex("FriendDbId");

                    b.HasIndex("MeDbId");

                    b.ToTable("FriendRelation");
                });

            modelBuilder.Entity("LobbyServer.DB.FriendRequestDb", b =>
                {
                    b.Property<int>("FriendRequestDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromDbId")
                        .HasColumnType("int");

                    b.Property<int>("ToDbId")
                        .HasColumnType("int");

                    b.HasKey("FriendRequestDbId");

                    b.HasIndex("FromDbId");

                    b.HasIndex("ToDbId");

                    b.ToTable("FriendRequest");
                });

            modelBuilder.Entity("LobbyServer.DB.PlayerDb", b =>
                {
                    b.Property<int>("PlayerDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountDbId")
                        .HasColumnType("int");

                    b.Property<float>("FaceColor_X")
                        .HasColumnType("real");

                    b.Property<float>("FaceColor_Y")
                        .HasColumnType("real");

                    b.Property<float>("FaceColor_Z")
                        .HasColumnType("real");

                    b.Property<int>("FaceType")
                        .HasColumnType("int");

                    b.Property<int>("HairColor")
                        .HasColumnType("int");

                    b.Property<int>("HairType")
                        .HasColumnType("int");

                    b.Property<int>("JacketType")
                        .HasColumnType("int");

                    b.HasKey("PlayerDbId");

                    b.HasIndex("AccountDbId")
                        .IsUnique();

                    b.ToTable("Player");
                });

            modelBuilder.Entity("LobbyServer.DB.FriendRelationDb", b =>
                {
                    b.HasOne("LobbyServer.DB.PlayerDb", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LobbyServer.DB.PlayerDb", "Me")
                        .WithMany("Friends")
                        .HasForeignKey("MeDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("Me");
                });

            modelBuilder.Entity("LobbyServer.DB.FriendRequestDb", b =>
                {
                    b.HasOne("LobbyServer.DB.PlayerDb", "From")
                        .WithMany()
                        .HasForeignKey("FromDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LobbyServer.DB.PlayerDb", "To")
                        .WithMany("Requests")
                        .HasForeignKey("ToDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("LobbyServer.DB.PlayerDb", b =>
                {
                    b.HasOne("LobbyServer.DB.AccountDb", "Account")
                        .WithOne("Player")
                        .HasForeignKey("LobbyServer.DB.PlayerDb", "AccountDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("LobbyServer.DB.AccountDb", b =>
                {
                    b.Navigation("Player");
                });

            modelBuilder.Entity("LobbyServer.DB.PlayerDb", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
